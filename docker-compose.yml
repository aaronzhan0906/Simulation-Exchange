services:
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/bitnami/kafka

  node-backend:
    build: 
      context: .
      dockerfile: node-backend/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./node-backend:/usr/src/app/node-backend
      - ./public:/usr/src/app/public
      - ./package.json:/usr/src/app/package.json
      - ./package-lock.json:/usr/src/app/package-lock.json
      - /usr/src/app/node_modules
    env_file: .env
    environment:
      - NODE_ENV=${NODE_ENV}
      - MYSQL_HOST=mysql
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - ACCESS_TOKEN_EXPIRY=${ACCESS_TOKEN_EXPIRY}
      - REFRESH_TOKEN_EXPIRY=${REFRESH_TOKEN_EXPIRY}
      - KAFKA_CLIENT_ID=${KAFKA_CLIENT_ID}
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - KAFKA_GROUP_ID=${KAFKA_GROUP_ID}
      - KAFKAJS_NO_PARTITIONER_WARNING=${KAFKAJS_NO_PARTITIONER_WARNING}
      - SNOWFLAKE_INSTANCE_ID=${SNOWFLAKE_INSTANCE_ID}
      - SNOWFLAKE_CUSTOM_EPOCH=${SNOWFLAKE_CUSTOM_EPOCH}
    command: npm run start:dev
    depends_on:
      - mysql

  matching-engine:
    build:
      context: .
      dockerfile: matching-engine/Dockerfile
    volumes:
      - ./matching-engine:/usr/src/app/matching-engine
    environment:
      - KAFKA_BROKERS=${KAFKA_BROKERS}
    depends_on:
      - kafka

volumes:
  mysql_data:
    driver: local
  kafka_data:
    driver: local

networks:
  default:
    name: simu-exchange_default